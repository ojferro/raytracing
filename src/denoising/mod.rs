pub use self::denoising::BlueNoise;


mod denoising{
    static disc_blue_noise: &'static [(f64, f
    static spherical_blue_noise_64: &'static [(f64, f64, f
    static spherical_blue_noise_16: &'static [(f64, f64, f
    static screenspace_blue_noise_64_64: &'static [f64] = &[0.2642377, 0.8333146, -0.4855569];

    pub struct BlueNoise {}
    impl BlueNoise{
        pub fn get_disc() -> Vec<(f64, f64)>{
            disc_blue_noise.to_vec()
        }
        pub fn get_screenspace() -> Vec<f64>{
            screenspace_blue_noise_64_64.to_vec()
        }
        pub fn get_spherical_64() -> Vec<(f64, f64, f64)>{
            spherical_blue_noise_64.to_vec()
        }
    }
}